<Page x:Class="BookingApp.WPF.View.DriverView.DriverHomePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:val="clr-namespace:BookingApp.WPF.View.Validation"
      xmlns:local="clr-namespace:BookingApp.WPF.View.DriverView"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"
      Title="DriverHomePage"
      Background="Black">
    <Page.Resources>
        <FontFamily x:Key="DigitalFont">/Fonts/#Digital-7</FontFamily>
        <SolidColorBrush x:Key="Green" Color="#3DA37B"/>
        <SolidColorBrush x:Key="Dark blue" Color="#016A7B"/>
        <SolidColorBrush x:Key="Bronze" Color="#CB8222"/>
        <SolidColorBrush x:Key="Black" Color="#1A1D22"/>
        <SolidColorBrush x:Key="DarkBackground" Color="#363E49"/>
        
        <Style x:Key="LightText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="LightLabel" TargetType="Label">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="button" CornerRadius="10" BorderBrush="Transparent" BorderThickness="1" Background="{StaticResource DarkBackground}">
                                <TextBlock  Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="button" Property="Background"  Value="Gray"/>
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="button"  Property="Background" Value="LightSteelBlue"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="Gray" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="button" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="StartButton" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="button" CornerRadius="10" BorderBrush="Transparent" BorderThickness="1" Background="Green">
                                <TextBlock  Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="button" Property="Background"  Value="LightGreen"/>
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="button"  Property="Background" Value="LightSteelBlue"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="Gray" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="button" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="TabButton" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="button" CornerRadius="10" BorderBrush="Transparent" BorderThickness="1" Background="#3c4552">
                                <TextBlock  Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="button" Property="Background"  Value="Gray"/>
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="button"  Property="Background" Value="LightSteelBlue"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="Gray" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="button" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="CustomTabItemStyle" TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Transparent">
                            <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#323943"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Black}"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <DockPanel>
        <Border BorderBrush="Gray"
            Background="Transparent"
            BorderThickness="1"
            DockPanel.Dock="Top">
            <StackPanel Orientation="Horizontal" Height="65" Background="#282e36">
                <Border CornerRadius="10" BorderThickness="2"
                        BorderBrush="Gray" Height="40" Margin="10">
                    <Button x:Name="HelpButton"
                            Width="90" ToolTip="Help"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Command="{Binding HelpCommand}">
                        <StackPanel Orientation="Horizontal" >
                            <Image x:Name="helpImage"
                                   VerticalAlignment="Center"
                                   Source="/Resources/Images/driver_help.png"
                                   Width="30" Height="30"
                                   Margin="0,0,10,0"/>
                            <TextBlock VerticalAlignment="Center"
                                        FontSize="15" Foreground="White"
                           >Help</TextBlock>
                        </StackPanel>
                    </Button>
                </Border>
                <Grid Width="715">
                    <Button x:Name="driverProfileButton"
                            ToolTip="Check profile"
                            Margin="10"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Command="{Binding ProfileCommand}"
                            HorizontalAlignment="Right"
                            Padding="0">
                        <Border CornerRadius="10"
                                BorderThickness="2"
                                BorderBrush="Gray"
                                Height="40">
                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                                <TextBlock VerticalAlignment="Center"
                                           Margin="15,0"
                                           FontSize="15"
                                           Foreground="White"
                                           Text="{Binding Path=Name}"/>
                                <Image x:Name="driverImage"
                                       Margin="0,0,5,0"
                                       Source="/Resources/Images/driver.png"
                                       Width="30"
                                       Height="30"/>
                            </StackPanel>
                        </Border>
                    </Button>
                </Grid>
            </StackPanel>
        </Border>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Margin="0,30,0,0">
                <Image x:Name="NotifyBell"
                       Source="/Resources/Images/driver_notification.png"
                       Width="20" Height="20"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Right"
                       Visibility="{Binding Path = NotifyBellVisibility}"/>
                <TabControl x:Name="TabControl" Background="#282e36">
                    <TabItem Name="DrivesTabItem" Style="{StaticResource CustomTabItemStyle}">
                        <TabItem.Header>
                            <Label Content="Today Drives"
                               FontSize="15" Foreground="White"
                            HorizontalAlignment="Stretch"/>
                        </TabItem.Header>
                        <Grid>
                            <Button x:Name="DismissDriveButton"
                                    Content="Dismiss Drive"
                                    Command="{Binding DismissDriveCommand}" FontSize="15"
                                    Width="114" Height="35"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Margin="0,408,0,0"
                                    Foreground="White"
                                    Style="{DynamicResource TabButton}" RenderTransformOrigin="0.484,0.061"/>
                            <DataGrid Height="380"
                                      Background="#323943"
                                      BorderBrush="Transparent"
                                      RowHeight="30"
                                      ColumnWidth="80"
                                      AutoGenerateColumns="False"
                                      x:Name="DriveReservationGrid"
                                      ItemsSource="{Binding DriveReservations, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding SelectedDriveReservation, UpdateSourceTrigger=PropertyChanged}"
                                      SelectionMode="Single" IsReadOnly="True"
                                      Margin="10,23,10,65">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Tourist" Binding="{Binding TouristName}" Width="60"/>
                                    <DataGridTextColumn Header="Start Address" Binding="{Binding StartAddress}" Width="105"/>
                                    <DataGridTextColumn Header="End Address" Binding="{Binding EndAddress}" Width="105"/>
                                    <DataGridTextColumn Header="Departure Time" Binding="{Binding StartTime}" Width="110"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Name="NotificationsTabItem" Style="{StaticResource CustomTabItemStyle}">
                        <TabItem.Header>
                            <Label Content="Notifications"
                                    FontSize="15" Foreground="White"
                                    HorizontalAlignment="Stretch"/>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Button Width="50" Height="20"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Right"
                                    Margin="10" Content="Read"
                                    Style="{StaticResource RoundedButton}"
                                    Foreground="White"
                                    ToolTip="Read notification"
                                    Command="{Binding ReadCommand}"/>
                            <ListBox x:Name="NotificationsList" Margin="12,34,12,0"
                                     Width="370" Height="173"
                                      Background="#323943"
                                     ItemsSource="{Binding Path = Notifications}"
                                     VerticalAlignment="Top"
                                     SelectedItem="{Binding Path = SelectedNotification}"
                                     IsHitTestVisible="True">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="Gray" BorderThickness="1" Margin="5" Background="White"
                                                Padding="7" Width="340" Height="30" CornerRadius="5">
                                            <TextBlock Text="{Binding}" />
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Button x:Name="AcceptExtraDriveButton"
                                    Content="Accept Drive" FontSize="15"
                                    Command="{Binding AcceptExtraDriveCommand}"
                                    Width="115" Height="35"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Margin="10,10,10,10"
                                    Foreground="White" Grid.Row="1"
                                    Style="{DynamicResource TabButton}"/>
                            <DataGrid
                                      BorderBrush="Transparent"
                                      Background="#323943"
                                      AutoGenerateColumns="False"
                                      x:Name="ExtraDriveNotificationGrid"
                                      ItemsSource="{Binding ExtraDriveReservations, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding SelectedExtraDrive, UpdateSourceTrigger=PropertyChanged}"
                                      SelectionMode="Single" IsReadOnly="True"
                                      Margin="10,212,10,56" Grid.RowSpan="2">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Tourist" Binding="{Binding TouristName}" Width="60"/>
                                    <DataGridTextColumn Header="Start Address" Binding="{Binding StartAddress}" Width="105"/>
                                    <DataGridTextColumn Header="End Address" Binding="{Binding EndAddress}" Width="105"/>
                                    <DataGridTextColumn Header="Departure Time" Binding="{Binding StartTime}" Width="100"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
            <Grid Grid.Column="1" Margin="0,0,0,50">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.4*"></RowDefinition>
                    <RowDefinition Height="0.6*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Label  Grid.Row="1" Grid.Column="0" Margin="30,0,0,0"
                    Height="25" VerticalAlignment="Top" Padding="0"
                    Visibility="{Binding Path = StartDriveVisibility}"
                    Style="{StaticResource LightLabel}">Next drive:</Label>
                <TextBlock x:Name="CurrentDriveBlock" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                   Text="{Binding Path=CurrentDrive, UpdateSourceTrigger=PropertyChanged}"
                   Margin="30,0,10,5" Height="30" VerticalAlignment="Bottom"
                   FontSize="15" Foreground="White"></TextBlock>
                <Button x:Name="OnLocationButton"
                IsEnabled="{Binding Path = IsOnLocation}"
                Content="OnLocation" FontSize="15"
                Width="100" Height="40"
                Command="{Binding Path = OnLocationCommand}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Grid.Column="1" Grid.Row="2"
                        Foreground="White"
                        Style="{DynamicResource RoundedButton}"/>
                <Button x:Name="LateButton"
                        ToolTip="Chek if late"
                IsEnabled="{Binding Path = IsLateEnabled}"
                Content="Late" FontSize="15"
                Width="100" Height="40"
                Command="{Binding Path = LateCommand}"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Margin="0,0,10,0"
                Grid.Column="0" Grid.Row="2"
                        Foreground="White"
                        Style="{DynamicResource RoundedButton}"/>
                <Border CornerRadius="10" Grid.Row="2" Grid.Column="0"
                        Margin="35,0,130,120" Grid.RowSpan="2">
                    <TextBox x:Name="driveDelay" Width="30"
                             IsHitTestVisible="{Binding DelayHitTest}"
                             FontSize="18" Background="Gray"
                             VerticalAlignment="Center" Foreground="White"
                             HorizontalAlignment="Left">
                        <TextBox.Text>
                            <Binding Path="Delay">
                                <Binding.ValidationRules>
                                    <val:DriverDelayValidation ValidationStep="ConvertedProposedValue" Min="1" Max="10"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <AdornedElementPlaceholder Grid.Row="0" x:Name="driveDelay" 
                                                   Width="70" Height="30"
                                                   Margin="0,10,0,0"/>
                                    <TextBlock Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red" />
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                </Border>
                <Label Content="m" Grid.Row="2" Grid.Column="0"
                 Margin="50,48,90,0" Foreground="White"
                       Width="30"
                       VerticalAlignment="Top" FontSize="18"/>
                <Button x:Name="StartButton"
                IsEnabled="{Binding IsStartEnabled}"
                Content="Start" FontSize="15"
                Width="100" Height="40"
                Command="{Binding StartCommand}"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Grid.Column="1" Grid.Row="4"
                Visibility="{Binding Path = StartDriveVisibility}"
                        Foreground="White"
                        Style="{DynamicResource StartButton}"/>
                <TextBlock  x:Name="DriveTime" FontSize="70"
                Text="{Binding Path=DriveTime, UpdateSourceTrigger=PropertyChanged}"
                Grid.ColumnSpan="2" Grid.Row="3" Foreground="#F5224A"
                            FontFamily="{StaticResource DigitalFont}"
                VerticalAlignment="Top" Margin="0,10,0,0"
                HorizontalAlignment="Center"></TextBlock>
                <TextBlock  x:Name="DrivePrice" FontSize="30"
            Text="{Binding Path=DrivePrice, UpdateSourceTrigger=PropertyChanged}"
            Grid.ColumnSpan="2" Grid.Row="3" TextAlignment="Center"
            VerticalAlignment="Bottom" Width="50" Foreground="#F5224A"
                            FontFamily="{StaticResource DigitalFont}"
            HorizontalAlignment="Center" Margin="0,80,0,0"></TextBlock>
                <Button x:Name="LeaveButton"
                        ToolTip="Leave location"
                IsEnabled="{Binding IsStartEnabled}"
                Content="Leave" FontSize="15"
                Width="100" Height="40"
                Command="{Binding LeaveCommand}"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Margin="10,10,10,0"
                Grid.Column="0" Grid.Row="4"
                Visibility="{Binding Path = StartDriveVisibility}"
                        Foreground="White"
                        Style="{DynamicResource RoundedButton}"/>
                <Button x:Name="FinishButton" FontSize="15"
                Width="200" Height="40"
                Content="Finish" Command="{Binding FinishDriveCommand}"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Grid.ColumnSpan="2" Grid.Row="4"
                Visibility="{Binding Path = FinishDriveVisibility}"
                        Foreground="White"
                        Style="{DynamicResource StartButton}"/>
                <TextBlock
                Grid.Column="1" Grid.Row="3" Foreground="#F5224A"
                VerticalAlignment="Bottom" FontSize="30" FontFamily="{StaticResource DigitalFont}"
                HorizontalAlignment="Left" Margin="50,80,0,0">din</TextBlock>
            </Grid>
        </Grid>
    </DockPanel>
</Page>
